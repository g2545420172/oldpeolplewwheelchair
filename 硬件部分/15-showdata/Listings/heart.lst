C51 COMPILER V9.60.0.0   HEART                                                             11/07/2020 18:51:35 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE HEART
OBJECT MODULE PLACED IN .\Objects\heart.obj
COMPILER INVOKED BY: D:\APP\Keil\C51\BIN\C51.EXE app\heart.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\app) DEBUG OBJECTEXTEND P
                    -RINT(.\Listings\heart.lst) OBJECT(.\Objects\heart.obj)

line level    source

   1          /***
   2          心率模块控制核心驱动，这里我们采用的是串口2
   3          该模块负责发送并获取心率数据
   4          // 之前调试串口2死活没用发现是我自己没有把C文件引入，下次自己要注意一下！！
   5          
   6          //这个模块有两个注意事项
   7          //1.一定要用橡皮筋帮着手，要不然会无法检测，
   8          //2.数据要等20秒左右才会正常显示，前面会一直为0，后面就会显示正常
   9          ***/
  10          #include "reg51.h"
  11          #include "intrins.h"
  12          #include "heart.h"
  13          #include "send.h"
  14          #include "oled.h" 
  15          
  16          code unsigned char CMD_GET_DATA[6] = {0xfd,0x00,0x00,0x00,0x00,0x00};  //协议包头
  17          
  18          #define FOSC 11059200L          //系统频率
  19          #define BAUD 115200            //串口波特率
  20          
  21          sfr AUXR  = 0x8e;               //辅助寄存器
  22          sfr S2CON = 0x9a;               //UART2 控制寄存器
  23          sfr S2BUF = 0x9b;               //UART2 数据寄存器
  24          sfr T2H   = 0xd6;               //定时器2高8位
  25          sfr T2L   = 0xd7;               //定时器2低8位
  26          sfr IE2   = 0xaf;               //中断控制寄存器2
  27          
  28          #define S2RI  0x01              //S2CON.0
  29          #define S2TI  0x02              //S2CON.1
  30          #define S2RB8 0x04              //S2CON.2
  31          #define S2TB8 0x08              //S2CON.3
  32          
  33          sfr P_SW2   = 0xBA;             //外设功能切换寄存器2
  34          #define S2_S0 0x01              //P_SW2.0
  35          bit busy2;
  36          
  37          bit flag = 0; // 用来判断当前是否接收到了心率数据
  38          int index = 0; // 当前接收到数据的位置
  39          // 使用全局变量来存储接收到的串口数据
  40          unsigned char heartData[3] = {0,0,0};
  41          
  42          // 延时10us的函数
  43          void Delay10us()                //@11.0592MHz
  44          {
  45   1              unsigned char i;
  46   1              _nop_();
  47   1              i = 25;
  48   1              while (--i);
  49   1      }
  50          
  51          // 串口2的初始化
  52          void u2Init()
  53          {
  54   1              //P_SW2负责控制串口2在2组管脚之间切换的控制位
C51 COMPILER V9.60.0.0   HEART                                                             11/07/2020 18:51:35 PAGE 2   

  55   1          P_SW2 &= ~S2_S0;            //S2_S0=0 (P1.0/RxD2, P1.1/TxD2)
  56   1      //  P_SW2 |= S2_S0;             //S2_S0=1 (P4.6/RxD2_2, P4.7/TxD2_2)
  57   1              //这个负责控制串口2的工作方式，这里我们配置的和串口1一样
  58   1          S2CON = 0x50;               //8位可变波特率
  59   1              //T2L 和T2H 分为控制定时器2的高八位和低八位，主要负责波特率的计算
  60   1              T2L = (65536 - (FOSC/4/BAUD));   //设置波特率重装值
  61   1          T2H = (65536 - (FOSC/4/BAUD))>>8;
  62   1              //AUXR 是一个辅助寄存器，主要负责控制定时器2的控制
  63   1              // 我们这里是 00010100 T2R为1 T2X12为1
  64   1              //01010100
  65   1              //T2R是定时器2的运行控制位，为1就代表允许定时器2运行
  66   1              //T2X12为定时器2速度控制。我们这里为1就是说明定时器2的速度为传统51的12倍，不分频
  67   1              //01000000 T1x12为1表示定时器1的速度是传统8051的12倍
  68   1          AUXR = AUXR|0x14;                //T2为1T模式, 并启动定时器2
  69   1              //开启串口2中断，这里不需要TR2因为TR2在AUXR里面
  70   1          IE2 = 0x01;                 //使能串口2中断
  71   1              // 开启系统中断
  72   1          EA = 1;
  73   1      }
  74          
  75          /*----------------------------
  76          UART2 中断服务程序
  77          -----------------------------*/
  78          void Uart2() interrupt 8
  79          {
  80   1              unsigned char dat;
  81   1          if (S2CON & S2RI)
  82   1          {
  83   2              S2CON &= ~S2RI;         //清除S2RI位
  84   2              dat = S2BUF;             // 获取串口数据
  85   2                      // 判断是否准备接收
  86   2                      if (flag) {
  87   3                              // 判断数组是否越界
  88   3                              if (index > 2) {
  89   4                                      flag=0;index=0;
  90   4                              } else {        
  91   4                                      // 接收数据
  92   4                                      heartData[index] = dat;
  93   4                                      index ++ ;
  94   4                              }
  95   3                      }
  96   2                      // 判断是否可以开始接收数据
  97   2                      if (dat==0xfd){                 // 准备接收数据
  98   3                              flag = 1;
  99   3                      }
 100   2                      
 101   2          }
 102   1          if (S2CON & S2TI)
 103   1          {
 104   2              S2CON &= ~S2TI;         //清除S2TI位
 105   2              busy2 = 0;               //清忙标志
 106   2          }
 107   1      }
 108          
 109          /*----------------------------
 110          发送串口数据
 111          ----------------------------*/
 112          void SendData2(unsigned char dat)
 113          {
 114   1          while (busy2);               //等待前面的数据发送完成
 115   1          busy2 = 1;
 116   1          S2BUF = dat;                //写数据到UART2数据寄存器
C51 COMPILER V9.60.0.0   HEART                                                             11/07/2020 18:51:35 PAGE 3   

 117   1      }
 118          
 119          /*----------------------------
 120          发送字符串
 121          ----------------------------*/
 122          void SendString2(char *s)
 123          {
 124   1          while (*s)                  //检测字符串结束标志
 125   1          {
 126   2              SendData2(*s++);         //发送当前字符
 127   2          }
 128   1      }
 129          
 130          // 16进制数据转字符串
 131          char * hex2char(char * str,unsigned char dat){
 132   1          //先获取百位 +48 是把数字转换为asciall码
 133   1          str[0] = (dat/100)+48;
 134   1               //取十位
 135   1          str[1] = dat%100/10+48;
 136   1               //取个位
 137   1          str[2] = dat%10 +48;
 138   1              return str;
 139   1      }
 140          
 141          // 获取心率数据
 142          void getHeart(){
 143   1              char str[4] = {0,0,0,0};
 144   1              //对获取的数据进行处理转换为可以识别的10进制字符串
 145   1              //串口发送数据(这里我们通过前缀来进行划分)
 146   1              SendString("$HEART,");
 147   1              SendString(hex2char(str,heartData[0]));
 148   1              SendString(",");
 149   1              SendString(hex2char(str,heartData[1]));
 150   1              SendString(",");
 151   1              SendString(hex2char(str,heartData[2]));
 152   1              SendString(",0e");
 153   1              // 显示屏显示
 154   1              showHeart(hex2char(str,heartData[2]));
 155   1              showPressH(hex2char(str,heartData[0]));
 156   1              showPressL(hex2char(str,heartData[1]));
 157   1      }
 158          
 159          
 160          //开始进行心率检测
 161          void Startheart(){
 162   1              int i;
 163   1              for(i=0;i<6;i++){
 164   2                      SendData2(CMD_GET_DATA[i]);
 165   2              }
 166   1              getHeart();
 167   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    368    ----
   CONSTANT SIZE    =     24    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.60.0.0   HEART                                                             11/07/2020 18:51:35 PAGE 4   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
