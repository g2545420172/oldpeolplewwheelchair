C51 COMPILER V9.60.0.0   MPU6050                                                           09/10/2020 09:13:37 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MPU6050
OBJECT MODULE PLACED IN .\Objects\mpu6050.obj
COMPILER INVOKED BY: D:\APP\Keil\C51\BIN\C51.EXE app\mpu6050.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\app) DEBUG OBJECTEXTEND
                    - PRINT(.\Listings\mpu6050.lst) OBJECT(.\Objects\mpu6050.obj)

line level    source

   1          //****************************************
   2          //MPU6050的核心驱动，
   3          //该程序负责获取MPU6050的数据
   4          //****************************************
   5          #include <REG51.H>      
   6          #include <math.h>    //Keil library  
   7          #include <stdio.h>   //Keil library     
   8          #include <INTRINS.H>
   9          #include "mpu6050.h"
  10          #include "send.h"
  11          #include "oled.h" 
  12          //****************************************
  13          // 定义单片机的IIC串口，自己可以修改
  14          //****************************************
  15          sbit    SCL=P2^6;                       //IIC时钟引脚定义
  16          sbit    SDA=P2^7;                       //IIC数据引脚定义
  17          //**************************************************************************************************
  18          //定义类型及变量
  19          //**************************************************************************************************
  20          int     dis_data;                                       //变量
  21          uchar dis[6];                                   //显示数字(-511至512)的字符数组
  22          //********************************************************************************
  23          //整数转字符串
  24          //********************************************************************************
  25          void lcd_printf(uchar *s,int temp_data)
  26          {
  27   1              if(temp_data<0)
  28   1              {
  29   2                      temp_data=-temp_data;
  30   2                      *s='-';
  31   2              }  else {
  32   2                      *s=' ';
  33   2              }
  34   1              
  35   1      
  36   1              *++s =temp_data/10000+0x30;
  37   1              temp_data=temp_data%10000;     //取余运算
  38   1      
  39   1              *++s =temp_data/1000+0x30;
  40   1              temp_data=temp_data%1000;     //取余运算
  41   1      
  42   1              *++s =temp_data/100+0x30;
  43   1              temp_data=temp_data%100;     //取余运算
  44   1              *++s =temp_data/10+0x30;
  45   1              temp_data=temp_data%10;      //取余运算
  46   1              *++s =temp_data+0x30;
  47   1      }
  48          //*************************************************************************************************
  49          //************************************延时*********************************************************
  50          //*************************************************************************************************
  51          void delay(unsigned int k)      
  52          {                                               
  53   1              unsigned int i,j;                               
  54   1              for(i=0;i<k;i++)
C51 COMPILER V9.60.0.0   MPU6050                                                           09/10/2020 09:13:37 PAGE 2   

  55   1              {                       
  56   2                      for(j=0;j<121;j++);
  57   2              }                                               
  58   1      }
  59          //************************************************************************************************
  60          //延时5微秒(STC90C52RC@12M)
  61          //不同的工作环境,需要调整此函数
  62          //注意当改用1T的MCU时,请调整此延时函数
  63          //************************************************************************************************
  64          void Delay5us()
  65          {
  66   1              unsigned char i;
  67   1              _nop_();
  68   1              i = 11;
  69   1              while (--i);
  70   1      }
  71          //*************************************************************************************************
  72          //I2C起始信号
  73          //*************************************************************************************************
  74          void I2C_Start()
  75          {
  76   1          SDA = 1;                    //拉高数据线
  77   1          SCL = 1;                    //拉高时钟线
  78   1          Delay5us();                 //延时
  79   1          SDA = 0;                    //产生下降沿
  80   1          Delay5us();                 //延时
  81   1          SCL = 0;                    //拉低时钟线
  82   1      }
  83          //*************************************************************************************************
  84          //I2C停止信号
  85          //*************************************************************************************************
  86          void I2C_Stop()
  87          {
  88   1          SDA = 0;                    //拉低数据线
  89   1          SCL = 1;                    //拉高时钟线
  90   1          Delay5us();                 //延时
  91   1          SDA = 1;                    //产生上升沿
  92   1          Delay5us();                 //延时
  93   1      }
  94          //**************************************************************************************************
  95          //I2C发送应答信号
  96          //入口参数:ack (0:ACK 1:NAK)
  97          //**************************************************************************************************
  98          void I2C_SendACK(bit ack)
  99          {
 100   1          SDA = ack;                  //写应答信号
 101   1          SCL = 1;                    //拉高时钟线
 102   1          Delay5us();                 //延时
 103   1          SCL = 0;                    //拉低时钟线
 104   1          Delay5us();                 //延时
 105   1      }
 106          //****************************************************************************************************
 107          //I2C接收应答信号
 108          //****************************************************************************************************
 109          bit I2C_RecvACK()
 110          {
 111   1          SCL = 1;                    //拉高时钟线
 112   1          Delay5us();                 //延时
 113   1          CY = SDA;                   //读应答信号
 114   1          SCL = 0;                    //拉低时钟线
 115   1          Delay5us();                 //延时
 116   1          return CY;
C51 COMPILER V9.60.0.0   MPU6050                                                           09/10/2020 09:13:37 PAGE 3   

 117   1      }
 118          //*****************************************************************************************************
 119          //向I2C总线发送一个字节数据
 120          //*****************************************************************************************************
 121          void I2C_SendByte(uchar dat)
 122          {
 123   1          uchar i;
 124   1          for (i=0; i<8; i++)         //8位计数器
 125   1          {
 126   2              dat <<= 1;              //移出数据的最高位
 127   2              SDA = CY;               //送数据口
 128   2              SCL = 1;                //拉高时钟线
 129   2              Delay5us();             //延时
 130   2              SCL = 0;                //拉低时钟线
 131   2              Delay5us();             //延时
 132   2          }
 133   1          I2C_RecvACK();
 134   1      }
 135          //*****************************************************************************************************
 136          //从I2C总线接收一个字节数据
 137          //******************************************************************************************************
 138          uchar I2C_RecvByte()
 139          {
 140   1          uchar i;
 141   1          uchar dat = 0;
 142   1          SDA = 1;                    //使能内部上拉,准备读取数据,
 143   1          for (i=0; i<8; i++)         //8位计数器
 144   1          {
 145   2              dat <<= 1;
 146   2              SCL = 1;                //拉高时钟线
 147   2              Delay5us();             //延时
 148   2              dat |= SDA;             //读数据               
 149   2              SCL = 0;                //拉低时钟线
 150   2              Delay5us();             //延时
 151   2          }
 152   1          return dat;
 153   1      }
 154          //*****************************************************************************************************
 155          //向I2C设备写入一个字节数据
 156          //*****************************************************************************************************
 157          void Single_WriteI2C(uchar REG_Address,uchar REG_data)
 158          {
 159   1          I2C_Start();                  //起始信号
 160   1          I2C_SendByte(SlaveAddress);   //发送设备地址+写信号
 161   1          I2C_SendByte(REG_Address);    //内部寄存器地址，
 162   1          I2C_SendByte(REG_data);       //内部寄存器数据，
 163   1          I2C_Stop();                   //发送停止信号
 164   1      }
 165          //*******************************************************************************************************
 166          //从I2C设备读取一个字节数据
 167          //*******************************************************************************************************
 168          uchar Single_ReadI2C(uchar REG_Address)
 169          {
 170   1              uchar REG_data;
 171   1              I2C_Start();                   //起始信号
 172   1              I2C_SendByte(SlaveAddress);    //发送设备地址+写信号
 173   1              I2C_SendByte(REG_Address);     //发送存储单元地址，从0开始      
 174   1              I2C_Start();                   //起始信号
 175   1              I2C_SendByte(SlaveAddress+1);  //发送设备地址+读信号
 176   1              REG_data=I2C_RecvByte();       //读出寄存器数据
 177   1              I2C_SendACK(1);                //接收应答信号
 178   1              I2C_Stop();                    //停止信号
C51 COMPILER V9.60.0.0   MPU6050                                                           09/10/2020 09:13:37 PAGE 4   

 179   1              return REG_data;
 180   1      }
 181          //******************************************************************************************************
 182          //初始化MPU6050
 183          //******************************************************************************************************
 184          void InitMPU6050()
 185          {
 186   1              Single_WriteI2C(PWR_MGMT_1, 0x00);      //解除休眠状态
 187   1              Single_WriteI2C(SMPLRT_DIV, 0x07);
 188   1              Single_WriteI2C(CONFIG, 0x06);
 189   1              Single_WriteI2C(GYRO_CONFIG, 0x18);
 190   1              Single_WriteI2C(ACCEL_CONFIG, 0x01);
 191   1      }
 192          //******************************************************************************************************
 193          //合成数据
 194          //******************************************************************************************************
 195          int GetData(uchar REG_Address)
 196          {
 197   1              uchar H,L;
 198   1              H=Single_ReadI2C(REG_Address);
 199   1              L=Single_ReadI2C(REG_Address+1);
 200   1              return ((H<<8)+L);   //合成数据
 201   1      }
 202          
 203          // 串口显示加速度传感器的数据
 204          void display(int value){
 205   1              int i;
 206   1              lcd_printf(dis,value);
 207   1              for(i=0;i<6;i++)
 208   1              {
 209   2             SendData(dis[i]);
 210   2          }
 211   1      }
 212          
 213          //对转换到的5位字符进行处理，方便OLED 屏幕显示
 214          void OLED_process(uchar *s){
 215   1              s[0] = s[3];
 216   1              s[1] = s[4];
 217   1              s[2] = s[5];
 218   1              // 要想字符串正确显示，那么最后一位必须以0来结尾，注意不要填/0，没用
 219   1              s[3] = 0;
 220   1      }
 221          
 222          
 223          // 开始获取陀螺仪的数据
 224          void startGetPosition(){
 225   1              unsigned char x[6],y[6],z[6];
 226   1              //串口发送数据(这里我们通过前缀来进行划分)
 227   1              SendString("$MPU6050,");
 228   1              display(GetData(ACCEL_XOUT_H));         //显示X轴加速度
 229   1              SendString(",");
 230   1              display(GetData(ACCEL_YOUT_H));         //显示Y轴加速度
 231   1              SendString(",");
 232   1              display(GetData(ACCEL_ZOUT_H));         //显示Z轴加速度
 233   1              SendString(",");
 234   1              display(GetData(GYRO_XOUT_H));          //显示X轴角速度
 235   1              SendString(",");
 236   1              display(GetData(GYRO_YOUT_H));          //显示Y轴角速度
 237   1              SendString(",");
 238   1              display(GetData(GYRO_ZOUT_H));          //显示Z轴角速度
 239   1              SendString("e");
 240   1              //显示方向信息
C51 COMPILER V9.60.0.0   MPU6050                                                           09/10/2020 09:13:37 PAGE 5   

 241   1              lcd_printf(x,GetData(ACCEL_XOUT_H));
 242   1              lcd_printf(y,GetData(ACCEL_YOUT_H));
 243   1              lcd_printf(z,GetData(ACCEL_ZOUT_H));
 244   1              OLED_process(x);
 245   1              OLED_process(y);
 246   1              OLED_process(z);
 247   1              showPosition(x,y,z);
 248   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    839    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8      25
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
