C51 COMPILER V9.60.0.0   MPU6050                                                           09/06/2020 19:18:49 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MPU6050
OBJECT MODULE PLACED IN .\Objects\mpu6050.obj
COMPILER INVOKED BY: D:\APP\Keil\C51\BIN\C51.EXE app\mpu6050.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\app) DEBUG OBJECTEXTEND
                    - PRINT(.\Listings\mpu6050.lst) OBJECT(.\Objects\mpu6050.obj)

line level    source

   1          //****************************************
   2          //MPU6050的核心驱动
   3          //****************************************
   4          #include <REG52.H>      
   5          #include <math.h>    //Keil library  
   6          #include <stdio.h>   //Keil library     
   7          #include <INTRINS.H>
   8          #include "mpu6050.h"
   9          
  10          //****************************************
  11          // 定义单片机的IIC串口，自己可以修改
  12          //****************************************
  13          sbit    SCL=P2^7;                       //IIC时钟引脚定义
  14          sbit    SDA=P2^6;                       //IIC数据引脚定义
  15          //**************************************************************************************************
  16          //定义类型及变量
  17          //**************************************************************************************************
  18          int     dis_data;                                       //变量
  19          //********************************************************************************
  20          //整数转字符串
  21          //********************************************************************************
  22          void lcd_printf(uchar *s,int temp_data)
  23          {
  24   1              if(temp_data<0)
  25   1              {
  26   2                      temp_data=-temp_data;
  27   2                      *s='-';
  28   2              }
  29   1              else *s=' ';
  30   1      
  31   1              *++s =temp_data/10000+0x30;
  32   1              temp_data=temp_data%10000;     //取余运算
  33   1      
  34   1              *++s =temp_data/1000+0x30;
  35   1              temp_data=temp_data%1000;     //取余运算
  36   1      
  37   1              *++s =temp_data/100+0x30;
  38   1              temp_data=temp_data%100;     //取余运算
  39   1              *++s =temp_data/10+0x30;
  40   1              temp_data=temp_data%10;      //取余运算
  41   1              *++s =temp_data+0x30;
  42   1      }
  43          //*************************************************************************************************
  44          //************************************延时*********************************************************
  45          //*************************************************************************************************
  46          void delay(unsigned int k)      
  47          {                                               
  48   1              unsigned int i,j;                               
  49   1              for(i=0;i<k;i++)
  50   1              {                       
  51   2                      for(j=0;j<121;j++);
  52   2              }                                               
  53   1      }
  54          //************************************************************************************************
C51 COMPILER V9.60.0.0   MPU6050                                                           09/06/2020 19:18:49 PAGE 2   

  55          //延时5微秒(STC90C52RC@12M)
  56          //不同的工作环境,需要调整此函数
  57          //注意当改用1T的MCU时,请调整此延时函数
  58          //************************************************************************************************
  59          void Delay5us()
  60          {
  61   1              unsigned char i;
  62   1              _nop_();
  63   1              i = 11;
  64   1              while (--i);
  65   1      }
  66          //*************************************************************************************************
  67          //I2C起始信号
  68          //*************************************************************************************************
  69          void I2C_Start()
  70          {
  71   1          SDA = 1;                    //拉高数据线
  72   1          SCL = 1;                    //拉高时钟线
  73   1          Delay5us();                 //延时
  74   1          SDA = 0;                    //产生下降沿
  75   1          Delay5us();                 //延时
  76   1          SCL = 0;                    //拉低时钟线
  77   1      }
  78          //*************************************************************************************************
  79          //I2C停止信号
  80          //*************************************************************************************************
  81          void I2C_Stop()
  82          {
  83   1          SDA = 0;                    //拉低数据线
  84   1          SCL = 1;                    //拉高时钟线
  85   1          Delay5us();                 //延时
  86   1          SDA = 1;                    //产生上升沿
  87   1          Delay5us();                 //延时
  88   1      }
  89          //**************************************************************************************************
  90          //I2C发送应答信号
  91          //入口参数:ack (0:ACK 1:NAK)
  92          //**************************************************************************************************
  93          void I2C_SendACK(bit ack)
  94          {
  95   1          SDA = ack;                  //写应答信号
  96   1          SCL = 1;                    //拉高时钟线
  97   1          Delay5us();                 //延时
  98   1          SCL = 0;                    //拉低时钟线
  99   1          Delay5us();                 //延时
 100   1      }
 101          //****************************************************************************************************
 102          //I2C接收应答信号
 103          //****************************************************************************************************
 104          bit I2C_RecvACK()
 105          {
 106   1          SCL = 1;                    //拉高时钟线
 107   1          Delay5us();                 //延时
 108   1          CY = SDA;                   //读应答信号
 109   1          SCL = 0;                    //拉低时钟线
 110   1          Delay5us();                 //延时
 111   1          return CY;
 112   1      }
 113          //*****************************************************************************************************
 114          //向I2C总线发送一个字节数据
 115          //*****************************************************************************************************
 116          void I2C_SendByte(uchar dat)
C51 COMPILER V9.60.0.0   MPU6050                                                           09/06/2020 19:18:49 PAGE 3   

 117          {
 118   1          uchar i;
 119   1          for (i=0; i<8; i++)         //8位计数器
 120   1          {
 121   2              dat <<= 1;              //移出数据的最高位
 122   2              SDA = CY;               //送数据口
 123   2              SCL = 1;                //拉高时钟线
 124   2              Delay5us();             //延时
 125   2              SCL = 0;                //拉低时钟线
 126   2              Delay5us();             //延时
 127   2          }
 128   1          I2C_RecvACK();
 129   1      }
 130          //*****************************************************************************************************
 131          //从I2C总线接收一个字节数据
 132          //******************************************************************************************************
 133          uchar I2C_RecvByte()
 134          {
 135   1          uchar i;
 136   1          uchar dat = 0;
 137   1          SDA = 1;                    //使能内部上拉,准备读取数据,
 138   1          for (i=0; i<8; i++)         //8位计数器
 139   1          {
 140   2              dat <<= 1;
 141   2              SCL = 1;                //拉高时钟线
 142   2              Delay5us();             //延时
 143   2              dat |= SDA;             //读数据               
 144   2              SCL = 0;                //拉低时钟线
 145   2              Delay5us();             //延时
 146   2          }
 147   1          return dat;
 148   1      }
 149          //*****************************************************************************************************
 150          //向I2C设备写入一个字节数据
 151          //*****************************************************************************************************
 152          void Single_WriteI2C(uchar REG_Address,uchar REG_data)
 153          {
 154   1          I2C_Start();                  //起始信号
 155   1          I2C_SendByte(SlaveAddress);   //发送设备地址+写信号
 156   1          I2C_SendByte(REG_Address);    //内部寄存器地址，
 157   1          I2C_SendByte(REG_data);       //内部寄存器数据，
 158   1          I2C_Stop();                   //发送停止信号
 159   1      }
 160          //*******************************************************************************************************
 161          //从I2C设备读取一个字节数据
 162          //*******************************************************************************************************
 163          uchar Single_ReadI2C(uchar REG_Address)
 164          {
 165   1              uchar REG_data;
 166   1              I2C_Start();                   //起始信号
 167   1              I2C_SendByte(SlaveAddress);    //发送设备地址+写信号
 168   1              I2C_SendByte(REG_Address);     //发送存储单元地址，从0开始      
 169   1              I2C_Start();                   //起始信号
 170   1              I2C_SendByte(SlaveAddress+1);  //发送设备地址+读信号
 171   1              REG_data=I2C_RecvByte();       //读出寄存器数据
 172   1              I2C_SendACK(1);                //接收应答信号
 173   1              I2C_Stop();                    //停止信号
 174   1              return REG_data;
 175   1      }
 176          //******************************************************************************************************
 177          //初始化MPU6050
 178          //******************************************************************************************************
C51 COMPILER V9.60.0.0   MPU6050                                                           09/06/2020 19:18:49 PAGE 4   

 179          void InitMPU6050()
 180          {
 181   1              Single_WriteI2C(PWR_MGMT_1, 0x00);      //解除休眠状态
 182   1              Single_WriteI2C(SMPLRT_DIV, 0x07);
 183   1              Single_WriteI2C(CONFIG, 0x06);
 184   1              Single_WriteI2C(GYRO_CONFIG, 0x18);
 185   1              Single_WriteI2C(ACCEL_CONFIG, 0x01);
 186   1      }
 187          //******************************************************************************************************
 188          //合成数据
 189          //******************************************************************************************************
 190          int GetData(uchar REG_Address)
 191          {
 192   1              uchar H,L;
 193   1              H=Single_ReadI2C(REG_Address);
 194   1              L=Single_ReadI2C(REG_Address+1);
 195   1              return ((H<<8)+L);   //合成数据
 196   1      }
 197          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    548    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
